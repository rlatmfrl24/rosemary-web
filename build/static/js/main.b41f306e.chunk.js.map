{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","pageState","setPageState","itemList","setItemList","handleMenuClick","e","name","useEffect","callNewList","a","fetch","response","json","data","callClearNewList","className","Container","style","marginTop","marginBottom","Header","as","marginLeft","Menu","Item","active","onClick","Group","divided","map","item","Content","href","url","target","Meta","Description","code","Extra","type","codelist","join","Button","Segment","Form","TextArea","height","placeholder","value","copyCollection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QA2FeA,MAvFf,WAEE,IAFa,EAIqBC,mBAAS,WAJ9B,mBAINC,EAJM,KAIKC,EAJL,OAKmBF,mBAAS,IAL5B,mBAKNG,EALM,KAKIC,EALJ,KAMPC,EAAkB,SAACC,EAAD,OAAKC,EAAL,EAAKA,KAAL,OAAeL,EAAaK,IAEpDC,qBAAU,WACRC,MACA,IAEF,IAAMA,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,MAXN,mEAUC,cACZC,EADY,gBAECA,EAASC,OAFV,OAEZC,EAFY,OAGlBV,EAAYU,GAHM,2CAAH,qDAMXC,EAAgB,uCAAG,sBAAAL,EAAA,sEACjBC,MAhBS,wEAeQ,2CAAH,qDAyCtB,OACE,qBAAKK,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,CAAWC,MAAO,CAACC,UAAW,MAAOC,aAAa,OAAlD,UACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKJ,MAAO,CAACK,WAAW,QAAnC,sBACA,eAACC,EAAA,EAAD,WACA,cAACA,EAAA,EAAKC,KAAN,CACElB,KAAK,UACLmB,OAAsB,YAAdzB,EACR0B,QAAStB,EAHX,sBAOA,cAACmB,EAAA,EAAKC,KAAN,CACElB,KAAK,iBACLmB,OAAsB,mBAAdzB,EACR0B,QAAStB,EAHX,gCASe,YAAdJ,EAxDH,cAACwB,EAAA,EAAKG,MAAN,CAAYC,SAAO,EAACX,MAAO,CAACK,WAAW,QAAvC,SAEEpB,EAAS2B,KAAI,SAAAC,GACX,OACE,cAACN,EAAA,EAAD,UACE,eAACA,EAAA,EAAKO,QAAN,CAAcV,GAAG,IAAIW,KAAMF,EAAKG,IAAKC,OAAO,SAA5C,UACE,cAACV,EAAA,EAAKJ,OAAN,UAAeU,EAAKxB,OACpB,cAACkB,EAAA,EAAKW,KAAN,UAAYL,EAAKG,MACjB,cAACT,EAAA,EAAKY,YAAN,UAAmBN,EAAKO,OACxB,cAACb,EAAA,EAAKc,MAAN,UAAaR,EAAKS,iBAUT,WACrB,IAAMC,EAAWtC,EAAS2B,KAAI,SAAAC,GAC5B,OAAOA,EAAKO,QACXI,KAAK,MACR,OACE,eAACzB,EAAA,EAAD,WACA,cAAC0B,EAAA,EAAD,CAAQhB,QAAS,kBAAIZ,KAArB,wBACA,cAAC6B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAU5B,MAAO,CAAC6B,OAAO,QAAUC,YAAY,eAAeC,MAASR,WA4BlCS,SCxEhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b41f306e.chunk.js","sourcesContent":["import \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Container, Header, Item, Menu, Segment, Form, TextArea, Button } from \"semantic-ui-react\";\n\nfunction App() {\n\n  const newListAPI = 'https://us-central1-soulkey-rosemary.cloudfunctions.net/newList'\n  const clearAPI = 'https://us-central1-soulkey-rosemary.cloudfunctions.net/clearNewList'\n  const [pageState, setPageState] = useState('newlist')\n  const [itemList, setItemList] = useState([])\n  const handleMenuClick = (e, {name}) => setPageState(name)\n\n  useEffect(()=>{\n    callNewList()\n  },[])\n\n  const callNewList = async () => {\n    const response = await fetch(newListAPI)\n    const data = await response.json()\n    setItemList(data)\n   }\n\n  const callClearNewList = async () => {\n    await fetch(clearAPI) \n  }\n\n  const newList = () => {\n    return (\n      <Item.Group divided style={{marginLeft:'1rem'}}>\n      {\n        itemList.map(item => {\n          return (\n            <Item>\n              <Item.Content as='a' href={item.url} target='_blank'>\n                <Item.Header >{item.name}</Item.Header>\n                <Item.Meta>{item.url}</Item.Meta>\n                <Item.Description>{item.code}</Item.Description>\n                <Item.Extra>{item.type}</Item.Extra>\n              </Item.Content>\n            </Item>\n          )\n        })\n      }\n    </Item.Group>\n    )\n  }\n\n  const copyCollection = () => {\n    const codelist = itemList.map(item => {\n      return item.code\n    }).join('\\n')\n    return (\n      <Container>\n      <Button onClick={()=>callClearNewList()} >Remove All</Button> \n      <Segment>\n        <Form>\n          <TextArea style={{height:'50vh'}}  placeholder='Tell us more' value = {codelist}/>\n        </Form>\n      </Segment>\n      </Container>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Container style={{marginTop: '3em', marginBottom:'3em'}}>\n        <Header as='h1' style={{marginLeft:'1rem'}}>Rosemary</Header>\n        <Menu>\n        <Menu.Item\n          name='newlist'\n          active={pageState === 'newlist'}\n          onClick={handleMenuClick}>\n          New List\n        </Menu.Item>\n\n        <Menu.Item\n          name='codecollection'\n          active={pageState === 'codecollection'}\n          onClick={handleMenuClick}>\n          Code Collection\n        </Menu.Item>\n\n      </Menu>\n      {\n        (pageState === 'newlist')? newList() : copyCollection()\n      }\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}